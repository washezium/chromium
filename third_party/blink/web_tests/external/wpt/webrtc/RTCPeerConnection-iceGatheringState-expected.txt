This is a testharness.js-based test.
PASS Initial iceGatheringState should be new
PASS iceGatheringState should eventually become complete after setLocalDescription
PASS setLocalDescription(reoffer) with no new transports should not cause iceGatheringState to change
PASS setLocalDescription(reoffer) with a new transport should cause iceGatheringState to go to "checking" and then "complete"
PASS sRD does not cause ICE gathering state changes
FAIL renegotiation that closes all transports should result in ICE gathering state "new" promise_test: Unhandled rejection with value: object "TypeError: pc1.getTransceivers(...)[0].stop is not a function"
FAIL connection with one data channel should eventually have connected connection state assert_equals: Expect ICE transport to be in checking gatheringState when iceGatheringState is checking expected (string) "gathering" but got (undefined) undefined
Harness: the test ran to completion.

